
name: PR

on:
  pull_request:
    branches:
      - main
    type:
      - create
      - synchronize

  workflow_dispatch:


concurrency:
  group: ci-pr-${{ github.event_number }}
  cancel-in-progress: true

jobs:
  contexts:
    runs-on: ubuntu-latest
    steps:
      -
        name: github
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  solr-check:
    runs-on: ubuntu-latest

    outputs:
      change-detected: ${{ steps.check-dumps.outputs.change-detected }}

    env:
      THIS: ${{ github.event.pull_request.head.ref }}

    steps:
      -
        name: Checkout code
        uses: gladiatr72/checkout-action@v3-no-noise
        with:
          ref: ${{ env.THIS }}
          fetch-depth: 20
      -
        name: cache data commit refs
        uses: actions/cache@v3
        with:
          path: /tmp/.cache
          key: ${{ github.head_ref }}
      -
        name: check for new dump
        id: check-dumps
        run: |
          set -o xtrace
          set -o verbose
          mkdir -p /tmp/.cache
          prCommits=${{ github.event.pull_request.commits }}
          prSpan=HEAD$( eval printf -- '^%.0s' {1..$prCommits} )..HEAD
          prCommits=$( git log --format=%H ${prSpan} )
          lastUpdate=$( git log -1 --format=%H ${prSpan} -- dumps/nuremberg_prod_dump_latest.sqlite3.zip )

          [[ -n "${lastUpdate}" ]] && \
            echo "last-update=${lastUpdate}" >> $GITHUB_OUTPUT &&
            [[ -f /tmp/.cache/${lastUpdate} ]] &&
              echo "change-detected=false" >> $GITHUB_OUTPUT ||
              echo "change-detected=true" >> $GITHUB_OUTPUT

          # extract file linked from the symlink
          DUMP_LINK_TGT=$( find dumps -inum $( stat -t -L dumps/*latest.sqlite3.zip | cut -d" " -f8 ) )

          echo "## solr-check"
          [[ -n ${lastUpdate} ]] &&
            [[ -f /tmp/.cache/${lastUpdate} ]] &&
             echo " * no new data" >> $GITHUB_STEP_SUMMARY ||
             echo " * found new data: \`${DUMP_LINK_TGT}\`" >> $GITHUB_STEP_SUMMARY &&
               echo ${lastUpdate} > /tmp/.cache/${lastUpdate}
  run:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: true

    needs:
      - solr-check

    env:
      THIS: ${{ format('refs/heads/{0}', github.event.pull_request.head.ref) }}
      buildSolr: ${{ needs.solr-check.outputs.change-detected }}
      lastUpdate: ${{ needs.solr-check.outputs.last-update }}

    steps:
      -
        name: Login to REVSYS Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.revsys.com
          username: github
          password: ${{ secrets.REVSYS_DOCKER_REGISTRY_PASSWORD }}
      -
        name: cache data commit refs
        uses: actions/cache@v3
        with:
          path: /tmp/.cache
          key: ${{ github.head_ref }}
      -
        name: update docker-compose
        run: |
          mkdir -pv $HOME/.docker/cli-plugins
          curl -Ls -o $HOME/.docker/cli-plugins/docker-compose \
            https://github.com/docker/compose/releases/download/v2.13.0/docker-compose-linux-x86_64
          chmod 755 $HOME/.docker/cli-plugins/docker-compose
          ln -sfv $HOME/.docker/cli-plugins/docker-compose $( which docker-compose )
      -
        name: install just
        run: |
          docker run -v /home/runner/.local/bin:/dist registry.revsys.com/just:0.9.4 || just --version
      -
        name: Checkout code
        uses: gladiatr72/checkout-action@v3-no-noise
        with:
          ref: ${{ env.THIS }}
#        env:
#          GITHUB_TRACE: 1
#          GIT_CURL_VERBOSE: 1
      -
        name: pull/rebuild solr image
        if: ${{ env.buildSolr == 'false' }}
        env:
          prNum: ${{ github.event.pull_request.number }}
        run: |
          #!/bin/bash
          cat <<SOLRTOP_${{github.run_number}} >> $GITHUB_STEP_SUMMARY

          ----

          SOLRTOP_${{github.run_number}}

          export PRSOLRVTAG="$( just tag )-${{ env.prNum }}-solr"

          echo "### pull/rebuild _Solr_ for test run" >> $GITHUB_STEP_SUMMARY   # built on previous commit to PR branch
          (
            docker manifest inspect ${PRSOLRVTAG} >& /dev/null  &&
            docker pull --quiet ${PRSOLRVTAG}  &&
            docker tag ${PRSOLRVTAG} $( just tag )-solr  &&
            echo " * using \`${PRSOLRVTAG}\` (exists)" >> $GITHUB_STEP_SUMMARY
          ) || \
          (
            docker manifest inspect $( just tag )-solr >& /dev/null &&  # use $( just tag )-solr if no PR-specific data changes
            docker pull --quiet $( just tag )-solr &&
            echo " * using $( just tag )-solr (exists, no updates)" >> $GITHUB_STEP_SUMMARY
          ) || \
          (
            echo " * building \`${PRSOLRVTAG}\` (new data)"  # last effort builds & pushes a PR-specific solr image
            NO_CACHE_TO=1 just regen-solr-image nopush &&
            docker tag $( just tag )-solr ${PRSOLRVTAG} &&
            docker push ${PRSOLRVTAG}
          )
      -
        name: build solr loader
        if: ${{ env.buildSolr == 'true' }}
        run: |
          NO_CACHE_TO=1 just build release --load ''
          echo " * using \`$( just tag )\` as Solr loader.." >> $GITHUB_STEP_SUMMARY
      -
        name: build solr image (new data)
        if: ${{ env.buildSolr == 'true' }}
        run: |
          export PRSOLRVTAG="$( just tag )-${{ github.event.pull_request.number }}-solr" &&
          NO_CACHE_TO=1 just regen-solr-image nopush &&
          docker tag $( just tag )-solr ${PRSOLRVTAG} &&
          docker push ${PRSOLRVTAG} || rm -fv /tmp/.cache/${{ env.lastUpdate }} &&
          echo " * re/built & persisted PR SOLR image (\`${PRSOLRVTAG}\`)" >> $GITHUB_STEP_SUMMARY
      -
        name: run tests
        run: |
          /bin/echo -en "\n----\n" >> $GITHUB_STEP_SUMMARY &&
          egrep -q '\[[[:blank:]]*notest[[:blank:]]*\]' <( git log -1 --format=%B ) &&
          cat <<RUNTESTS >> $GITHUB_STEP_SUMMARY || NO_CACHE_TO= just test
          ----

          **NOTICE**: skipping tests (\`[notest]\` in msg body)

          -----

          RUNTESTS
