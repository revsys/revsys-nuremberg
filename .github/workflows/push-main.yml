name: Push to Main

on:
  push:
    branches:

  workflow_dispatch:


concurrency:
  group: ci-push-to-main-${{ github.ref }}
  cancel-in-progress: true

jobs:
#  contexts:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: github
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "$GITHUB_CONTEXT"


  solr-check:
    runs-on: ubuntu-latest

    outputs:
      change-detected: ${{ steps.check-dumps.outputs.change-detected }}

    steps:
      -
        name: Checkout code
        uses: gladiatr72/checkout-action@v3-no-noise
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 5
      -
        name: check for new dump
        id: check-dumps
        run: |
          lastUpdate=$( git log -1 --format=%H -- dumps/nuremberg_prod_dump_latest.sqlite3.zip )
          [[ -n "${lastUpdate}" ]] && ( \
            [[ "${{ github.sha }}" == "${lastUpdate}" ]] && \
              (echo "change-detected=true" >> $GITHUB_OUTPUT && echo "::notice::new data available" ) || \
              (echo "change-detected=false" >> $GITHUB_OUTPUT && echo "::notice::no new data" ) \
          ) || \
          ( echo "change-detected=true" >> $GITHUB_OUTPUT && echo "rebuild solr" )

          echo "${{ github.sha }} vs. ${lastUpdate}"

  run:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: true

    needs:
      - solr-check

    env:
      probablyPr: "${{ contains(github.event.commits.*.committer.name, 'GitHub') && ( github.ref_name == 'main' && github.ref_type == 'branch' ) }}"
      probablyNotPr: "${{ ! contains(github.event.commits.*.committer.name, 'GitHub') && (github.ref_name == 'main' && github.ref_type == 'branch' ) }}"
      buildSolr: "${{ needs.solr-check.outputs.change-detected }}"

    steps:
      -
        name: Login to REVSYS Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.revsys.com
          username: github
          password: ${{ secrets.REVSYS_DOCKER_REGISTRY_PASSWORD }}
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      -
        name: update docker-compose
        run: |
          mkdir -pv $HOME/.docker/cli-plugins
          curl -Ls -o $HOME/.docker/cli-plugins/docker-compose \
            https://github.com/docker/compose/releases/download/v2.13.0/docker-compose-linux-x86_64
          chmod 755 $HOME/.docker/cli-plugins/docker-compose
          ln -sfv $HOME/.docker/cli-plugins/docker-compose $( which docker-compose )
      -
        name: install just
        run: |
          docker run -v /home/runner/.local/bin:/dist registry.revsys.com/just:0.9.4 || just --version
      -
        name: Checkout code
        uses: gladiatr72/checkout-action@v3-no-noise
        with:
          ref: ${{ github.ref_name }}
      -
        name: initial version
        run: |
          just banner version
          echo "### Version: $( just version )" >> $GITHUB_STEP_SUMMARY
          echo "::notice::version: $( just version )"
      -
        name: bump version (pr merge)
        if: ${{ env.probablyPr == true }}
        run: |
          just bump patch && \
          echo "### Version Update: $( just version )" >> $GITHUB_STEP_SUMMARY
          echo "::notice::version update: $( just version )"
      -
        name: wut
        if: ${{ github.ref_name == github.repository.default_branch }}
        run: |
          echo "prly not a pr: ${{ env.probablyNotPr }}"
          echo "prly a pr: ${{ env.probablyPr }}"
          echo "buildSolr: ${{ env.buildSolr }}"
      -
        name: bump version (direct commit)
        if: ${{ env.probablyNotPr == true }}
        run: |
          just bump build && \
          echo "### Version Update: $( just version )" >> $GITHUB_STEP_SUMMARY
          echo "::notice::version update: $( just version )"
      -
        name: build loader (release)
        if: ${{ env.buildSolr == 'true' }}
        run: |
          NO_CACHE_TO=1 just build release --load ''
      -
        name: build solr image (new data)
        if: ${{ env.buildSolr == 'true' }}
        run: |
          echo "::notice::new data set detected. building $( just tag )-solr..."
          NO_CACHE_TO=1 just regen-solr-image
      -
        name: retag solr image (no new data)
        if: ${{ env.buildSolr == 'false' }}
        run: |
          echo "::notice::no new data set detected. retagging last solr image"
          just retag-solr-image
      -
        name: run tests
        run: NO_CACHE_TO= just test
      -
        name: push version updates to repo
        if: ${{ github.ref_type == 'branch' && github.ref_name == github.repository.default_branch }}
        run: |
          git push && git push --tags
      -
        name: push docker image to registry
        if: ${{ github.ref_type == 'branch' && github.ref_name == github.repository.default_branch }}
        run: just push
      -
        name: deploy to dev
        if: ${{ github.ref_type == 'branch' && github.ref_name == github.repository.default_branch }}
        run: just deploy


